This is the Aarhus femtolab alignment calculator, writted by Anders SÃ¸ndergaard.

It is written in Python, although it also has some c code complied for fast calculations.
There are precompiled binaries, which are tested as working in Windows 11 and Ubuntu (on WSL2).
At the moment, I doubt the mac binaries will work, so you'll be stuck with numpy computations. However,
since this calculator ws written computers have got a lot faster, and the pure python version is fast
enoguh to be usable.

The easiest way to install it is using uv (https://docs.astral.sh/uv/):
    After uv is installed, clone this git repository. Then in a terminal go into the folder
    and excecute `uv run GUI.py` . uv should automatically download all the dependencies,
    and then fire up the GUI for the calculator.


This alignment calculator has several entry points:

cos2_thermal.py
===============
Program for calculating alignment traces of a Boltzmann ensemble of symmetric tops in gas phase.

cos2_calc.py
============
Program for calculating alignment traces of a single |JKM> state of a symmetric top.

Note: Check the molecular data in conf/molecules.conf before blindly using them.
Always have a good source of information you can cite.

GUI.py
======
Graphical front-end for both cos2_thermal.py and cos2_calc.py.
Requires PyQt5.

precalculate_matrix_elements.py
===============================
Script for calculating <J'KM| cos^2 theta_2d |JKM> matrix elements in advance.
If you run this script, the matrix elements will not have to be calculated
every time you calculate a 2d alignment trace.

This saves some time e.g. if you calculate several similar alignment traces
or you write something like an optimisation script up against this program.


Tips and tricks
===============
Source the env.sh script before running simulations.
It can significantly speed things up.
The alignment calculator tries to export these symbols by itself,
but that strategy is not always perfect, as the exported symbols
must in some cases be present on program startup.


