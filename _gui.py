# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created: Wed May 11 13:24:30 2016
#      by: PyQt5 UI code generator 5.3.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(517, 579)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(517, 579))
        MainWindow.setMaximumSize(QtCore.QSize(521, 600))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.mybutn = QtWidgets.QPushButton(self.centralwidget)
        self.mybutn.setGeometry(QtCore.QRect(372, 500, 91, 24))
        self.mybutn.setCursor(QtGui.QCursor(QtCore.Qt.SizeVerCursor))
        self.mybutn.setObjectName("mybutn")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(10, 30, 221, 231))
        self.frame.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(1)
        self.frame.setObjectName("frame")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(10, 170, 151, 16))
        self.label_2.setObjectName("label_2")
        self.moleculesBox = QtWidgets.QComboBox(self.frame)
        self.moleculesBox.setGeometry(QtCore.QRect(10, 190, 201, 20))
        self.moleculesBox.setToolTip("")
        self.moleculesBox.setInsertPolicy(QtWidgets.QComboBox.InsertAlphabetically)
        self.moleculesBox.setObjectName("moleculesBox")
        self.moleculesBox.addItem("")
        self.Aconst = QtWidgets.QLineEdit(self.frame)
        self.Aconst.setGeometry(QtCore.QRect(90, 30, 71, 20))
        self.Aconst.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Aconst.setText("")
        self.Aconst.setMaxLength(11)
        self.Aconst.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Aconst.setObjectName("Aconst")
        self.label_7 = QtWidgets.QLabel(self.frame)
        self.label_7.setGeometry(QtCore.QRect(10, 30, 71, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.frame)
        self.label_8.setGeometry(QtCore.QRect(10, 50, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.frame)
        self.label_9.setGeometry(QtCore.QRect(180, 30, 31, 16))
        self.label_9.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_9.setObjectName("label_9")
        self.Bconst = QtWidgets.QLineEdit(self.frame)
        self.Bconst.setGeometry(QtCore.QRect(90, 50, 71, 20))
        self.Bconst.setMaxLength(11)
        self.Bconst.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Bconst.setPlaceholderText("")
        self.Bconst.setObjectName("Bconst")
        self.label_10 = QtWidgets.QLabel(self.frame)
        self.label_10.setGeometry(QtCore.QRect(180, 50, 31, 16))
        self.label_10.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_10.setWordWrap(False)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.frame)
        self.label_11.setGeometry(QtCore.QRect(10, 10, 171, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.label_16 = QtWidgets.QLabel(self.frame)
        self.label_16.setGeometry(QtCore.QRect(10, 80, 171, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.alpha_par = QtWidgets.QLineEdit(self.frame)
        self.alpha_par.setGeometry(QtCore.QRect(90, 100, 71, 20))
        self.alpha_par.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.alpha_par.setText("")
        self.alpha_par.setMaxLength(11)
        self.alpha_par.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.alpha_par.setObjectName("alpha_par")
        self.label_23 = QtWidgets.QLabel(self.frame)
        self.label_23.setGeometry(QtCore.QRect(200, 100, 16, 16))
        self.label_23.setToolTip("")
        self.label_23.setObjectName("label_23")
        self.alpha_perp = QtWidgets.QLineEdit(self.frame)
        self.alpha_perp.setGeometry(QtCore.QRect(90, 120, 71, 20))
        self.alpha_perp.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.alpha_perp.setText("")
        self.alpha_perp.setMaxLength(11)
        self.alpha_perp.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.alpha_perp.setObjectName("alpha_perp")
        self.label_24 = QtWidgets.QLabel(self.frame)
        self.label_24.setGeometry(QtCore.QRect(200, 120, 16, 16))
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.frame)
        self.label_25.setGeometry(QtCore.QRect(10, 120, 61, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_25.setFont(font)
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.frame)
        self.label_26.setGeometry(QtCore.QRect(10, 100, 61, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_26.setFont(font)
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.frame)
        self.label_27.setGeometry(QtCore.QRect(10, 140, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_27.setFont(font)
        self.label_27.setObjectName("label_27")
        self.deltaAlpha = QtWidgets.QLabel(self.frame)
        self.deltaAlpha.setGeometry(QtCore.QRect(90, 140, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.deltaAlpha.setFont(font)
        self.deltaAlpha.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.deltaAlpha.setObjectName("deltaAlpha")
        self.label_29 = QtWidgets.QLabel(self.frame)
        self.label_29.setGeometry(QtCore.QRect(200, 140, 16, 16))
        self.label_29.setObjectName("label_29")
        self.InitConditionsTab = QtWidgets.QTabWidget(self.centralwidget)
        self.InitConditionsTab.setGeometry(QtCore.QRect(10, 280, 311, 171))
        self.InitConditionsTab.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.InitConditionsTab.setObjectName("InitConditionsTab")
        self.Boltzman = QtWidgets.QWidget()
        self.Boltzman.setObjectName("Boltzman")
        self.label_6 = QtWidgets.QLabel(self.Boltzman)
        self.label_6.setGeometry(QtCore.QRect(10, 11, 101, 16))
        self.label_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.Temperature = QtWidgets.QLineEdit(self.Boltzman)
        self.Temperature.setGeometry(QtCore.QRect(180, 10, 51, 20))
        self.Temperature.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Temperature.setText("")
        self.Temperature.setMaxLength(8)
        self.Temperature.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Temperature.setObjectName("Temperature")
        self.label_31 = QtWidgets.QLabel(self.Boltzman)
        self.label_31.setGeometry(QtCore.QRect(240, 10, 61, 20))
        self.label_31.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_31.setObjectName("label_31")
        self.abundanceEven = QtWidgets.QLineEdit(self.Boltzman)
        self.abundanceEven.setGeometry(QtCore.QRect(180, 32, 51, 20))
        self.abundanceEven.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.abundanceEven.setText("")
        self.abundanceEven.setMaxLength(8)
        self.abundanceEven.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.abundanceEven.setObjectName("abundanceEven")
        self.abundanceOdd = QtWidgets.QLineEdit(self.Boltzman)
        self.abundanceOdd.setGeometry(QtCore.QRect(180, 54, 51, 20))
        self.abundanceOdd.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.abundanceOdd.setText("")
        self.abundanceOdd.setMaxLength(8)
        self.abundanceOdd.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.abundanceOdd.setObjectName("abundanceOdd")
        self.label_32 = QtWidgets.QLabel(self.Boltzman)
        self.label_32.setGeometry(QtCore.QRect(10, 33, 141, 16))
        self.label_32.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_32.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_32.setObjectName("label_32")
        self.label_33 = QtWidgets.QLabel(self.Boltzman)
        self.label_33.setGeometry(QtCore.QRect(10, 55, 141, 16))
        self.label_33.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_33.setObjectName("label_33")
        self.label_38 = QtWidgets.QLabel(self.Boltzman)
        self.label_38.setGeometry(QtCore.QRect(10, 80, 131, 16))
        self.label_38.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_38.setObjectName("label_38")
        self.num_ensemble_states = QtWidgets.QLabel(self.Boltzman)
        self.num_ensemble_states.setGeometry(QtCore.QRect(180, 80, 50, 20))
        self.num_ensemble_states.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.num_ensemble_states.setObjectName("num_ensemble_states")
        self.percentile = QtWidgets.QLineEdit(self.Boltzman)
        self.percentile.setGeometry(QtCore.QRect(240, 80, 41, 20))
        self.percentile.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.percentile.setText("")
        self.percentile.setMaxLength(8)
        self.percentile.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.percentile.setObjectName("percentile")
        self.label_40 = QtWidgets.QLabel(self.Boltzman)
        self.label_40.setGeometry(QtCore.QRect(272, 80, 30, 20))
        self.label_40.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_40.setObjectName("label_40")
        self.ELfactor = QtWidgets.QLineEdit(self.Boltzman)
        self.ELfactor.setGeometry(QtCore.QRect(180, 110, 51, 20))
        self.ELfactor.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ELfactor.setText("")
        self.ELfactor.setMaxLength(8)
        self.ELfactor.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.ELfactor.setObjectName("ELfactor")
        self.label_41 = QtWidgets.QLabel(self.Boltzman)
        self.label_41.setGeometry(QtCore.QRect(10, 110, 170, 16))
        self.label_41.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_41.setObjectName("label_41")
        self.InitConditionsTab.addTab(self.Boltzman, "")
        self.singleState = QtWidgets.QWidget()
        self.singleState.setObjectName("singleState")
        self.J = QtWidgets.QLineEdit(self.singleState)
        self.J.setGeometry(QtCore.QRect(66, 50, 51, 20))
        self.J.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.J.setInputMethodHints(QtCore.Qt.ImhNone)
        self.J.setText("")
        self.J.setMaxLength(8)
        self.J.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.J.setReadOnly(False)
        self.J.setObjectName("J")
        self.K = QtWidgets.QLineEdit(self.singleState)
        self.K.setEnabled(True)
        self.K.setGeometry(QtCore.QRect(126, 50, 51, 20))
        self.K.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.K.setText("")
        self.K.setMaxLength(8)
        self.K.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.K.setObjectName("K")
        self.M = QtWidgets.QLineEdit(self.singleState)
        self.M.setGeometry(QtCore.QRect(186, 50, 51, 20))
        self.M.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.M.setText("")
        self.M.setMaxLength(8)
        self.M.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.M.setObjectName("M")
        self.label_34 = QtWidgets.QLabel(self.singleState)
        self.label_34.setGeometry(QtCore.QRect(26, 8, 131, 40))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_34.setFont(font)
        self.label_34.setObjectName("label_34")
        self.label_35 = QtWidgets.QLabel(self.singleState)
        self.label_35.setGeometry(QtCore.QRect(56, 38, 21, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_35.setFont(font)
        self.label_35.setObjectName("label_35")
        self.label_36 = QtWidgets.QLabel(self.singleState)
        self.label_36.setGeometry(QtCore.QRect(237, 38, 21, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_36.setFont(font)
        self.label_36.setObjectName("label_36")
        self.label_42 = QtWidgets.QLabel(self.singleState)
        self.label_42.setGeometry(QtCore.QRect(10, 80, 281, 50))
        self.label_42.setTextFormat(QtCore.Qt.AutoText)
        self.label_42.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft)
        self.label_42.setObjectName("label_42")
        self.InitConditionsTab.addTab(self.singleState, "")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 141, 16))
        self.label.setObjectName("label")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(240, 30, 271, 231))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(1)
        self.frame_2.setObjectName("frame_2")
        self.label_12 = QtWidgets.QLabel(self.frame_2)
        self.label_12.setGeometry(QtCore.QRect(10, 30, 101, 16))
        self.label_12.setObjectName("label_12")
        self.pulseDuration = QtWidgets.QLineEdit(self.frame_2)
        self.pulseDuration.setGeometry(QtCore.QRect(120, 30, 71, 20))
        self.pulseDuration.setText("")
        self.pulseDuration.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.pulseDuration.setObjectName("pulseDuration")
        self.label_13 = QtWidgets.QLabel(self.frame_2)
        self.label_13.setGeometry(QtCore.QRect(240, 30, 21, 16))
        self.label_13.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.frame_2)
        self.label_14.setGeometry(QtCore.QRect(10, 10, 101, 16))
        self.label_14.setObjectName("label_14")
        self.pulseIntensity = QtWidgets.QLineEdit(self.frame_2)
        self.pulseIntensity.setGeometry(QtCore.QRect(120, 10, 71, 20))
        self.pulseIntensity.setText("")
        self.pulseIntensity.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.pulseIntensity.setObjectName("pulseIntensity")
        self.label_15 = QtWidgets.QLabel(self.frame_2)
        self.label_15.setGeometry(QtCore.QRect(190, 10, 70, 16))
        self.label_15.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_15.setObjectName("label_15")
        self.pumpWaist = QtWidgets.QLineEdit(self.frame_2)
        self.pumpWaist.setGeometry(QtCore.QRect(120, 70, 71, 20))
        self.pumpWaist.setText("")
        self.pumpWaist.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.pumpWaist.setObjectName("pumpWaist")
        self.label_17 = QtWidgets.QLabel(self.frame_2)
        self.label_17.setGeometry(QtCore.QRect(10, 70, 101, 16))
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.frame_2)
        self.label_18.setGeometry(QtCore.QRect(240, 70, 21, 16))
        self.label_18.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.frame_2)
        self.label_19.setGeometry(QtCore.QRect(10, 90, 101, 16))
        self.label_19.setObjectName("label_19")
        self.probeWaist = QtWidgets.QLineEdit(self.frame_2)
        self.probeWaist.setGeometry(QtCore.QRect(120, 90, 71, 20))
        self.probeWaist.setText("")
        self.probeWaist.setMaxLength(8)
        self.probeWaist.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.probeWaist.setObjectName("probeWaist")
        self.label_20 = QtWidgets.QLabel(self.frame_2)
        self.label_20.setGeometry(QtCore.QRect(240, 90, 21, 16))
        self.label_20.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_20.setObjectName("label_20")
        self.label_21 = QtWidgets.QLabel(self.frame_2)
        self.label_21.setGeometry(QtCore.QRect(10, 150, 211, 20))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.frame_2)
        self.label_22.setGeometry(QtCore.QRect(10, 170, 230, 20))
        self.label_22.setObjectName("label_22")
        self.Nshells = QtWidgets.QLineEdit(self.frame_2)
        self.Nshells.setGeometry(QtCore.QRect(120, 130, 71, 20))
        self.Nshells.setText("")
        self.Nshells.setMaxLength(3)
        self.Nshells.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Nshells.setObjectName("Nshells")
        self.label_30 = QtWidgets.QLabel(self.frame_2)
        self.label_30.setGeometry(QtCore.QRect(10, 130, 80, 20))
        self.label_30.setObjectName("label_30")
        self.t0 = QtWidgets.QLineEdit(self.frame_2)
        self.t0.setGeometry(QtCore.QRect(120, 200, 71, 20))
        self.t0.setText("")
        self.t0.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.t0.setObjectName("t0")
        self.label_43 = QtWidgets.QLabel(self.frame_2)
        self.label_43.setGeometry(QtCore.QRect(10, 200, 101, 16))
        self.label_43.setObjectName("label_43")
        self.label_44 = QtWidgets.QLabel(self.frame_2)
        self.label_44.setGeometry(QtCore.QRect(240, 200, 21, 16))
        self.label_44.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.label_44.setObjectName("label_44")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(240, 10, 280, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 260, 91, 16))
        self.label_4.setObjectName("label_4")
        self.cos2d = QtWidgets.QCheckBox(self.centralwidget)
        self.cos2d.setGeometry(QtCore.QRect(10, 470, 21, 19))
        self.cos2d.setText("")
        self.cos2d.setTristate(False)
        self.cos2d.setObjectName("cos2d")
        self.label_37 = QtWidgets.QLabel(self.centralwidget)
        self.label_37.setGeometry(QtCore.QRect(240, 260, 271, 16))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.label_37.setFont(font)
        self.label_37.setStatusTip("")
        self.label_37.setObjectName("label_37")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(340, 300, 171, 111))
        self.frame_3.setFrameShape(QtWidgets.QFrame.Panel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.label_39 = QtWidgets.QLabel(self.frame_3)
        self.label_39.setGeometry(QtCore.QRect(10, 10, 71, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_39.setFont(font)
        self.label_39.setObjectName("label_39")
        self.Jmax = QtWidgets.QLineEdit(self.frame_3)
        self.Jmax.setGeometry(QtCore.QRect(100, 10, 41, 20))
        self.Jmax.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Jmax.setText("")
        self.Jmax.setMaxLength(4)
        self.Jmax.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.Jmax.setObjectName("Jmax")
        self.label_55 = QtWidgets.QLabel(self.frame_3)
        self.label_55.setGeometry(QtCore.QRect(20, 50, 141, 16))
        self.label_55.setObjectName("label_55")
        self.label_56 = QtWidgets.QLabel(self.frame_3)
        self.label_56.setGeometry(QtCore.QRect(10, 70, 151, 16))
        self.label_56.setObjectName("label_56")
        self.label_57 = QtWidgets.QLabel(self.frame_3)
        self.label_57.setGeometry(QtCore.QRect(10, 90, 151, 16))
        self.label_57.setObjectName("label_57")
        self.label_58 = QtWidgets.QLabel(self.frame_3)
        self.label_58.setGeometry(QtCore.QRect(10, 50, 10, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_58.setFont(font)
        self.label_58.setObjectName("label_58")
        self.label_54 = QtWidgets.QLabel(self.centralwidget)
        self.label_54.setGeometry(QtCore.QRect(340, 280, 171, 16))
        self.label_54.setObjectName("label_54")
        self.cos2dlabel = QtWidgets.QLabel(self.centralwidget)
        self.cos2dlabel.setGeometry(QtCore.QRect(28, 470, 391, 19))
        self.cos2dlabel.setTextFormat(QtCore.Qt.RichText)
        self.cos2dlabel.setObjectName("cos2dlabel")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(29, 491, 340, 51))
        self.label_5.setObjectName("label_5")
        self.forceDT = QtWidgets.QCheckBox(self.centralwidget)
        self.forceDT.setGeometry(QtCore.QRect(350, 420, 120, 19))
        self.forceDT.setObjectName("forceDT")
        self.timestep = QtWidgets.QLineEdit(self.centralwidget)
        self.timestep.setEnabled(False)
        self.timestep.setGeometry(QtCore.QRect(350, 440, 121, 20))
        self.timestep.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.timestep.setObjectName("timestep")
        self.label_28 = QtWidgets.QLabel(self.centralwidget)
        self.label_28.setGeometry(QtCore.QRect(486, 440, 20, 20))
        self.label_28.setObjectName("label_28")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 517, 19))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.saveTrace = QtWidgets.QAction(MainWindow)
        self.saveTrace.setCheckable(False)
        self.saveTrace.setEnabled(False)
        self.saveTrace.setObjectName("saveTrace")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionClose_figures = QtWidgets.QAction(MainWindow)
        self.actionClose_figures.setObjectName("actionClose_figures")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionPrecalculate = QtWidgets.QAction(MainWindow)
        self.actionPrecalculate.setObjectName("actionPrecalculate")
        self.menuFile.addAction(self.saveTrace)
        self.menuFile.addAction(self.actionPrecalculate)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuAbout.addAction(self.actionHelp)
        self.menuAbout.addAction(self.actionClose_figures)
        self.menuAbout.addSeparator()
        self.menuAbout.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.InitConditionsTab.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.moleculesBox, self.Aconst)
        MainWindow.setTabOrder(self.Aconst, self.Bconst)
        MainWindow.setTabOrder(self.Bconst, self.alpha_par)
        MainWindow.setTabOrder(self.alpha_par, self.alpha_perp)
        MainWindow.setTabOrder(self.alpha_perp, self.pulseIntensity)
        MainWindow.setTabOrder(self.pulseIntensity, self.pulseDuration)
        MainWindow.setTabOrder(self.pulseDuration, self.pumpWaist)
        MainWindow.setTabOrder(self.pumpWaist, self.probeWaist)
        MainWindow.setTabOrder(self.probeWaist, self.Nshells)
        MainWindow.setTabOrder(self.Nshells, self.t0)
        MainWindow.setTabOrder(self.t0, self.InitConditionsTab)
        MainWindow.setTabOrder(self.InitConditionsTab, self.Temperature)
        MainWindow.setTabOrder(self.Temperature, self.abundanceEven)
        MainWindow.setTabOrder(self.abundanceEven, self.abundanceOdd)
        MainWindow.setTabOrder(self.abundanceOdd, self.percentile)
        MainWindow.setTabOrder(self.percentile, self.ELfactor)
        MainWindow.setTabOrder(self.ELfactor, self.J)
        MainWindow.setTabOrder(self.J, self.K)
        MainWindow.setTabOrder(self.K, self.M)
        MainWindow.setTabOrder(self.M, self.Jmax)
        MainWindow.setTabOrder(self.Jmax, self.cos2d)
        MainWindow.setTabOrder(self.cos2d, self.forceDT)
        MainWindow.setTabOrder(self.forceDT, self.timestep)
        MainWindow.setTabOrder(self.timestep, self.mybutn)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Laser induced alignment calculator for symmetric top molecules"))
        self.mybutn.setToolTip(_translate("MainWindow", "Perform the calculation"))
        self.mybutn.setStatusTip(_translate("MainWindow", "Click to calculate an alignment trace"))
        self.mybutn.setText(_translate("MainWindow", "Go!"))
        self.label_2.setText(_translate("MainWindow", "Predefined molecules"))
        self.moleculesBox.setItemText(0, _translate("MainWindow", "Load..."))
        self.Aconst.setToolTip(_translate("MainWindow", "<html><head/><body><p>Secondary rotational constant.</p><p>Linear molecules have A=0.<br/>Prolate tops have A&gt;B.<br/>Oblate tops have A&lt;B.<br/>Spherical tops have A=B</p></body></html>"))
        self.Aconst.setStatusTip(_translate("MainWindow", "Linear molecules have A=0"))
        self.Aconst.setPlaceholderText(_translate("MainWindow", "0"))
        self.label_7.setToolTip(_translate("MainWindow", "<html><head/><body><p>Secondary rotational constant.</p><p>Linear molecules have A=0.<br/>Prolate tops have A&gt;B.<br/>Oblate tops have A&lt;B.<br/>Spherical tops have A=B</p></body></html>"))
        self.label_7.setStatusTip(_translate("MainWindow", "Linear molecules have A=0"))
        self.label_7.setText(_translate("MainWindow", "A"))
        self.label_8.setToolTip(_translate("MainWindow", "<html><head/><body><p>Main rotational constant.</p><p>This rotational constant corresponds to the two identical moments of inertia in a principal frame.</p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "B"))
        self.label_9.setToolTip(_translate("MainWindow", "Linear molecules have A=0"))
        self.label_9.setStatusTip(_translate("MainWindow", "Linear molecules have A=0"))
        self.label_9.setText(_translate("MainWindow", "GHz"))
        self.Bconst.setToolTip(_translate("MainWindow", "<html><head/><body><p>Main rotational constant.</p><p>This rotational constant corresponds to the two identical moments of inertia in a principal frame.</p></body></html>"))
        self.label_10.setText(_translate("MainWindow", "GHz"))
        self.label_11.setText(_translate("MainWindow", "Rotational constants"))
        self.label_16.setText(_translate("MainWindow", "Polarizability tensor"))
        self.alpha_par.setToolTip(_translate("MainWindow", "Polarizability volume along main molecular axis"))
        self.label_23.setText(_translate("MainWindow", "<html><head/><body><p>Å<span style=\" vertical-align:super;\">3</span></p></body></html>"))
        self.alpha_perp.setToolTip(_translate("MainWindow", "Polarizability volume perpendicular to the main molecular axis"))
        self.label_24.setText(_translate("MainWindow", "<html><head/><body><p>Å<span style=\" vertical-align:super;\">3</span></p></body></html>"))
        self.label_25.setToolTip(_translate("MainWindow", "Polarizability volume perpendicular to the main molecular axis"))
        self.label_25.setText(_translate("MainWindow", "<html><head/><body><p>α<span style=\" vertical-align:sub;\">&perp;</span></p></body></html>"))
        self.label_26.setToolTip(_translate("MainWindow", "Polarizability volume along main molecular axis"))
        self.label_26.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt;\">α</span><span style=\" font-size:12pt; vertical-align:sub;\">∥</span></p></body></html>"))
        self.label_27.setToolTip(_translate("MainWindow", "Polarizability volume anisotropy"))
        self.label_27.setText(_translate("MainWindow", "<html><head/><body><p>Δα</p></body></html>"))
        self.deltaAlpha.setToolTip(_translate("MainWindow", "Polarizability volume anisotropy"))
        self.deltaAlpha.setText(_translate("MainWindow", "0"))
        self.label_29.setText(_translate("MainWindow", "<html><head/><body><p>Å<span style=\" vertical-align:super;\">3</span></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "Temperature"))
        self.Temperature.setPlaceholderText(_translate("MainWindow", "0"))
        self.label_31.setText(_translate("MainWindow", "Kelvin"))
        self.abundanceEven.setPlaceholderText(_translate("MainWindow", "1"))
        self.abundanceOdd.setPlaceholderText(_translate("MainWindow", "1"))
        self.label_32.setToolTip(_translate("MainWindow", "<html><head/><body><p>Due to spin statistics and inversion/reflection symmetry, some rotational states either don\'t exists or are more abundant in nature than others.<br/><br/>For example, the symmetric molecule CS2 can only occupy even J states, as <span style=\" vertical-align:super;\">32</span>S is a boson with spin 0 and the electronic ground state <span style=\" vertical-align:super;\">1</span><span style=\" font-weight:600;\">Σ</span><span style=\" font-weight:600; vertical-align:sub;\">g</span> is even. The total wavefunction should be even. It is electronic*rotational*nuclear. The nuclear and electronic parts are even, so the rotational wavefunction must also be even. O<span style=\" vertical-align:sub;\">2</span> can only exist in odd J states. Species with nonzero nuclear spin (e.g. H<span style=\" vertical-align:sub;\">2</span>) can have &quot;strange&quot; abundancies due to the difference between the number of odd and even nuclear states. Hydrogen for example is three times more likely to be in an odd J state than an even.</p></body></html>"))
        self.label_32.setText(_translate("MainWindow", "Even abundance"))
        self.label_33.setToolTip(_translate("MainWindow", "<html><head/><body><p>Due to spin statistics and inversion/reflection symmetry, some rotational states either don\'t exists or are more abundant in nature than others.<br/><br/>For example, the symmetric molecule CS2 can only occupy even J states, as <span style=\" vertical-align:super;\">32</span>S is a boson with spin 0 and the electronic ground state <span style=\" vertical-align:super;\">1</span><span style=\" font-weight:600;\">Σ</span><span style=\" font-weight:600; vertical-align:sub;\">g</span> is even. The total wavefunction should be even. It is electronic*rotational*nuclear. The nuclear and electronic parts are even, so the rotational wavefunction must also be even. O<span style=\" vertical-align:sub;\">2</span> can only exist in odd J states. Species with nonzero nuclear spin (e.g. H<span style=\" vertical-align:sub;\">2</span>) can have &quot;strange&quot; abundancies due to the difference between the number of odd and even nuclear states. Hydrogen for example is three times more likely to be in an odd J state than an even.</p></body></html>"))
        self.label_33.setText(_translate("MainWindow", "Odd abundance"))
        self.label_38.setToolTip(_translate("MainWindow", "<html><head/><body><p>Number of ensemble states to propagate to resolve 99.9% of the partition function.</p><p>Note: this can be much lower than the actual number of states in a thermal ensemble. However, due to symmetry, not all ensemble memebers needs to be propagated.</p></body></html>"))
        self.label_38.setText(_translate("MainWindow", "Ensemble size"))
        self.num_ensemble_states.setToolTip(_translate("MainWindow", "<html><head/><body><p>Multiply with #FVA shells to get number of initial states to solve the Schrödinger equation for.</p></body></html>"))
        self.num_ensemble_states.setText(_translate("MainWindow", "N/A"))
        self.percentile.setToolTip(_translate("MainWindow", "Resolve this percentile of the Boltzmann distribution"))
        self.percentile.setPlaceholderText(_translate("MainWindow", "99.9"))
        self.label_40.setToolTip(_translate("MainWindow", "Resolve this percentile of the Boltzmann distribution"))
        self.label_40.setText(_translate("MainWindow", "%"))
        self.ELfactor.setToolTip(_translate("MainWindow", "<html><head/><body><p>The Even Lavie valve tends to supress low M states, such that the equi-partion theorem is violated. To model this, weigh each state by this factor raised to the |M|\'th power. If the factor is smaller than 1, it suppresses high M states. If it is larger than 1, low M states are suppressed.</p></body></html>"))
        self.ELfactor.setPlaceholderText(_translate("MainWindow", "1.0"))
        self.label_41.setToolTip(_translate("MainWindow", "<html><head/><body><p>The Even Lavie valve tends to supress low M states, such that the equi-partion theorem is violated. To model this, weigh each state by this factor raised to the |M|\'th power. If the factor is smaller than 1, it suppresses high M states. If it is larger than 1, low M states are suppressed.</p></body></html>"))
        self.label_41.setText(_translate("MainWindow", "Even Lavie M anisotropy"))
        self.InitConditionsTab.setTabText(self.InitConditionsTab.indexOf(self.Boltzman), _translate("MainWindow", "Boltzmann ensemble"))
        self.J.setToolTip(_translate("MainWindow", "J quantum number"))
        self.J.setStatusTip(_translate("MainWindow", "Total angular momentum quantum number"))
        self.J.setPlaceholderText(_translate("MainWindow", "0"))
        self.K.setToolTip(_translate("MainWindow", "K quantum number (always 0 for linear molecules)"))
        self.K.setStatusTip(_translate("MainWindow", "Projection on molecular axis"))
        self.K.setPlaceholderText(_translate("MainWindow", "0"))
        self.M.setToolTip(_translate("MainWindow", "M quantum number"))
        self.M.setStatusTip(_translate("MainWindow", "Projection on laser axis"))
        self.M.setPlaceholderText(_translate("MainWindow", "0"))
        self.label_34.setText(_translate("MainWindow", "<html><head/><body><p>|JKM&gt; = </p></body></html>"))
        self.label_35.setText(_translate("MainWindow", "<html><head/><body><p>|</p></body></html>"))
        self.label_36.setText(_translate("MainWindow", "<html><head/><body><p>&gt;</p></body></html>"))
        self.label_42.setToolTip(_translate("MainWindow", "<html><head/><body><p>Without focal volume averaging, also indicate the distribution of populated J states with &lt;J&gt; and &lt;J&gt;±sqrt(&lt;J<span style=\" vertical-align:super;\">2</span>&gt;-&lt;J&gt;<span style=\" vertical-align:super;\">2</span>).</p><p>The J value J<span style=\" vertical-align:sub;\">99.9%</span>, below which 99.9% of the probability amplitude is found, is also plotted.</p></body></html>"))
        self.label_42.setText(_translate("MainWindow", "<html><head/><body><p>If #FVA shells is 1, also plot extra<br/>information about the wave function.<br/>(hover mouse here for more information)</p></body></html>"))
        self.InitConditionsTab.setTabText(self.InitConditionsTab.indexOf(self.singleState), _translate("MainWindow", "Single |JKM> state"))
        self.label.setText(_translate("MainWindow", "Molecule data"))
        self.label_12.setToolTip(_translate("MainWindow", "<html><head/><body><p>Pulse duration, Full width at half max.</p><p>You are allowed to use scientific notation. E.g. setting the duration to 1e6 fs would set the pulse duration to 1 ns, and you would be simulating adiabatic alignment.</p><p>When doing so, it is very advantageous to lower the basis size drastically.</p></body></html>"))
        self.label_12.setText(_translate("MainWindow", "FWHM duration"))
        self.pulseDuration.setToolTip(_translate("MainWindow", "<html><head/><body><p>Pulse duration, Full width at half max.</p><p>You are allowed to use scientific notation. E.g. setting the duration to 1e6 fs would set the pulse duration to 1 ns, and you would be simulating adiabatic alignment.</p><p>When doing so, it is very advantageous to lower the basis size drastically.</p></body></html>"))
        self.pulseDuration.setPlaceholderText(_translate("MainWindow", "300"))
        self.label_13.setText(_translate("MainWindow", "fs"))
        self.label_14.setToolTip(_translate("MainWindow", "Kick (or pump) pulse"))
        self.label_14.setStatusTip(_translate("MainWindow", "Kick pulse intensity"))
        self.label_14.setText(_translate("MainWindow", "Peak intensity"))
        self.pulseIntensity.setToolTip(_translate("MainWindow", "Kick (or pump) pulse"))
        self.pulseIntensity.setStatusTip(_translate("MainWindow", "Kick pulse intensity"))
        self.pulseIntensity.setPlaceholderText(_translate("MainWindow", "10"))
        self.label_15.setText(_translate("MainWindow", "TW/cm²"))
        self.pumpWaist.setToolTip(_translate("MainWindow", "<html><head/><body><p>Spot size of the pump (or kick) pulse</p></body></html>"))
        self.pumpWaist.setPlaceholderText(_translate("MainWindow", "35"))
        self.label_17.setToolTip(_translate("MainWindow", "<html><head/><body><p>Spot size of the pump (or kick) pulse</p></body></html>"))
        self.label_17.setText(_translate("MainWindow", "Pump waist"))
        self.label_18.setText(_translate("MainWindow", "µm"))
        self.label_19.setToolTip(_translate("MainWindow", "Spot size of the probe pulse"))
        self.label_19.setText(_translate("MainWindow", "Probe waist"))
        self.probeWaist.setToolTip(_translate("MainWindow", "Spot size of the probe pulse"))
        self.probeWaist.setPlaceholderText(_translate("MainWindow", "25"))
        self.label_20.setText(_translate("MainWindow", "µm"))
        self.label_21.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" text-decoration: underline;\">F</span>ocal <span style=\" text-decoration: underline;\">V</span>olume <span style=\" text-decoration: underline;\">A</span>veraging shell(s)</p></body></html>"))
        self.label_22.setText(_translate("MainWindow", "(=1 for no focal volume averaging)"))
        self.Nshells.setToolTip(_translate("MainWindow", "Number of focal volume iso intensity shells to average traces over"))
        self.Nshells.setPlaceholderText(_translate("MainWindow", "1"))
        self.label_30.setToolTip(_translate("MainWindow", "Number of focal volume iso intensity shells to average traces over"))
        self.label_30.setText(_translate("MainWindow", "#FVA shells"))
        self.t0.setToolTip(_translate("MainWindow", "<html><head/><body><p>Kick pulse time</p><p>Tip: If you need to propagate to longer times, add a second, 0 intensity pulse at t = t0 + the extra time you need.</p></body></html>"))
        self.t0.setPlaceholderText(_translate("MainWindow", "0"))
        self.label_43.setToolTip(_translate("MainWindow", "<html><head/><body><p>Kick pulse time</p><p>Tip: If you need to propagate to longer times, add a second, 0 intensity pulse at t = t0 + the extra time you need.</p></body></html>"))
        self.label_43.setText(_translate("MainWindow", "<html><head/><body><p>T<span style=\" vertical-align:sub;\">0</span></p></body></html>"))
        self.label_44.setText(_translate("MainWindow", "ps"))
        self.label_3.setText(_translate("MainWindow", "Laser pulse (Gaussian, linearly polarized)"))
        self.label_4.setText(_translate("MainWindow", "Initial state"))
        self.cos2d.setToolTip(_translate("MainWindow", "<html><head/><body><p>&lt;cos<span style=\" vertical-align:super;\">2</span>θ<span style=\" vertical-align:sub;\">2d</span>&gt; is typically the only available observable in an actual experiment.</p></body></html>"))
        self.cos2d.setStatusTip(_translate("MainWindow", "For direct comparison with experiments"))
        self.label_37.setToolTip(_translate("MainWindow", "<html><head/><body><p>For multiple pulses, separate each t0 and optionally peak intensity, FWHM, and pump waist with a comma. If a field other than t0 only contains one value, all kick pulses will use that value.</p><p>The pulses must not overlap each other.</p></body></html>"))
        self.label_37.setText(_translate("MainWindow", "For multiple pulses, separate t0 with comma"))
        self.label_39.setText(_translate("MainWindow", "Jmax ="))
        self.Jmax.setToolTip(_translate("MainWindow", "Tip: for adiabatic alignment, Jmax can be really low."))
        self.Jmax.setPlaceholderText(_translate("MainWindow", "140"))
        self.label_55.setText(_translate("MainWindow", "of the highest basis"))
        self.label_56.setText(_translate("MainWindow", "state |JKM>."))
        self.label_57.setToolTip(_translate("MainWindow", "<html><head/><body><p>The lower, the faster the calculation.<br/>If too low, the result will be incorrect.</p><p>The optimal value depends on the laser pulse and the molecule in question.</p></body></html>"))
        self.label_57.setText(_translate("MainWindow", "Must not be too low."))
        self.label_58.setText(_translate("MainWindow", "J"))
        self.label_54.setText(_translate("MainWindow", "Basis size"))
        self.cos2dlabel.setToolTip(_translate("MainWindow", "<html><head/><body><p>&lt;cos<span style=\" vertical-align:super;\">2</span>θ<span style=\" vertical-align:sub;\">2d</span>&gt; is typically the only available observable in an actual experiment.</p></body></html>"))
        self.cos2dlabel.setStatusTip(_translate("MainWindow", "For direct comparison with experiments"))
        self.cos2dlabel.setText(_translate("MainWindow", "<html><head/><body><p>Also calculate &lt;cos<span style=\" vertical-align:super;\">2</span> θ<span style=\" vertical-align:sub;\">2d</span>&gt;</p></body></html>"))
        self.label_5.setToolTip(_translate("MainWindow", "<html><head/><body><p>If you don\'t, the matrix elements will be re-computed every time you calculate a trace.</p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p>Tip: In the file menu, you can calculate<br/>&lt;J\'KM|cos<span style=\" vertical-align:super;\">2</span>θ<span style=\" vertical-align:sub;\">2D</span>|JKM&gt; matrix elements in<br/>advance for faster calculations.</p></body></html>"))
        self.forceDT.setToolTip(_translate("MainWindow", "<html><head/><body><p>Sampling time step, not propagation time step. By default, this corresponds to 5 times the Nyquist sampling rate for traces in the impulsive limit.</p><p>If your simulate adiabatic alignment, consider increasing the time step a lot to save time.</p></body></html>"))
        self.forceDT.setStatusTip(_translate("MainWindow", "For plotting only"))
        self.forceDT.setText(_translate("MainWindow", "Force time step"))
        self.timestep.setToolTip(_translate("MainWindow", "<html><head/><body><p>Sampling time step, not propagation time step. By default, this corresponds to 5 times the Nyquist sampling rate for traces in the impulsive limit.</p><p>If your simulate adiabatic alignment, consider increasing the time step a lot to save time.</p></body></html>"))
        self.label_28.setText(_translate("MainWindow", "ps"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuAbout.setTitle(_translate("MainWindow", "Help"))
        self.saveTrace.setText(_translate("MainWindow", "Save last trace data"))
        self.saveTrace.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Esc"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionClose_figures.setText(_translate("MainWindow", "Close figures"))
        self.actionClose_figures.setShortcut(_translate("MainWindow", "Q"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionHelp.setShortcut(_translate("MainWindow", "?"))
        self.actionPrecalculate.setText(_translate("MainWindow", "Precalculate 2d matrix elements"))
        self.actionPrecalculate.setShortcut(_translate("MainWindow", "C"))

